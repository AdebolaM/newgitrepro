{
	"info": {
		"_postman_id": "47a5ed12-abc2-494e-a06e-0d073ca1d6f7",
		"name": "STSTStudentCourse",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "22981755"
	},
	"item": [
		{
			"name": "Get All Todo Entries",
			"item": [
				{
					"name": "Get All Todo Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"consumer\");\r",
									"});\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://demo.fusio-project.org/index.php",
							"protocol": "https",
							"host": [
								"demo",
								"fusio-project",
								"org"
							],
							"path": [
								"index.php"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get All Entries",
			"item": [
				{
					"name": "Get All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://demo.fusio-project.org/index.php/",
							"protocol": "https",
							"host": [
								"demo",
								"fusio-project",
								"org"
							],
							"path": [
								"index.php",
								""
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/"
					},
					"response": []
				}
			]
		},
		{
			"name": "Get entry per ID",
			"item": [
				{
					"name": "Get entry per ID - Valid ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://demo.fusio-project.org/index.php",
							"protocol": "https",
							"host": [
								"demo",
								"fusio-project",
								"org"
							],
							"path": [
								"index.php"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
					},
					"response": []
				},
				{
					"name": "Get entry per ID - Invalid ID(params not using TODO ID)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://demo.fusio-project.org/",
							"protocol": "https",
							"host": [
								"demo",
								"fusio-project",
								"org"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Books",
			"item": [
				{
					"name": "Get All Books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" const response = pm.response.json();\r",
									"//print any kind of message on the screen\r",
									"console.log(response[2].id)\r",
									"\r",
									"pm.environment.set(\"TheVanishingHalfid\",(response[2].id));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrlbook}}/books",
							"host": [
								"{{BaseUrlbook}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Books by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://simple-books-api.glitch.me/books/:bookid",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"books",
								":bookid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "bookid",
									"value": "{{bookid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Books by Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://simple-books-api.glitch.me/books?type=fiction",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "type",
									"value": "fiction"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Place a book order",
			"item": [
				{
					"name": "Place a book order - using book ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" const response = pm.response.json();\r",
									" pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"pm.test(\"order created\", function () {\r",
									"    pm.expect(response.created).to.eql(true);\r",
									"});\r",
									" const orderid = pm.response.json();\r",
									"\r",
									" console.log(orderid.orderId)\r",
									"\r",
									"//pm.globals.set(\"orderid\",orderid.orderId);\r",
									"\r",
									"pm.environment.set(\"orderid\", orderid.orderId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "700e0eecedba694918702bfd3a4315e218fd7099ba5fb9f58698c5c4e3b1428c"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": {{TheVanishingHalfid}},\n    \"customerName\": \"Adebola\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://simple-books-api.glitch.me/orders"
					},
					"response": []
				}
			]
		},
		{
			"name": "Get an order",
			"item": [
				{
					"name": "Get all orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "700e0eecedba694918702bfd3a4315e218fd7099ba5fb9f58698c5c4e3b1428c"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrlbook}}/orders",
							"host": [
								"{{BaseUrlbook}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an order - using orderID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "700e0eecedba694918702bfd3a4315e218fd7099ba5fb9f58698c5c4e3b1428c"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://simple-books-api.glitch.me/orders/:orderId",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{orderid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get an order using invalid ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "700e0eecedba694918702bfd3a4315e218fd7099ba5fb9f58698c5c4e3b1428c"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrlbook}}/orders?order=abcd",
							"host": [
								"{{BaseUrlbook}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "order",
									"value": "abcd"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update an order",
			"item": [
				{
					"name": "Update an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": 1,\n    \"customerName\": \"Testify Academy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://simple-books-api.glitch.me/orders/",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"orders",
								""
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete an order",
			"item": [
				{
					"name": "Delete an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://simple-books-api.glitch.me/orders/:orderId",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "rObASEWYlVrRX6cTAEgbt"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Register API Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": {
						"accessTokenUrl": "https://demo.fusio-project.org/",
						"tokenName": "Authority",
						"client_authentication": "header",
						"grant_type": "client_credentials",
						"addTokenTo": "header"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"clientName\": \"Adebola\",\n   \"clientEmail\": \"adebola.oritu@yahoo.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/api-clients/",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"api-clients",
						""
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get API Status",
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://simple-books-api.glitch.me/status"
			},
			"response": []
		},
		{
			"name": "Task 8A",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.title)\r",
							"console.log(jsonData.links[3].href)\r",
							"console.log(jsonData.links[7].rel)\r",
							"\r",
							"pm.environment.set(\"booktitle\",(jsonData.title));\r",
							"pm.environment.set(\"bookinglink\", (jsonData.links[3].href));\r",
							"pm.environment.set(\"bookingtitle\", (jsonData.links[7].rel));\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('Status code name has string', function () {\r",
							"    pm.response.to.have.status('OK');\r",
							"    pm.test('Body matches string', function () {\r",
							"        pm.expect(pm.response.text()).to.include('consumer');\r",
							"    });\r",
							"})\r",
							"\r",
							"pm.test('Response time is less than 200ms', function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"})\r",
							"\r",
							"pm.test('Response time is less than 300ms', function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"console.log(jsonData)\r",
							"\r",
							"pm.test('link for route', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.links[3].href).to.eql('https://demo.fusio-project.org/system/route');\r",
							"})\r",
							"\r",
							"pm.test('CONFIRM THE paymentCurrency IS eur', function () {\r",
							"    pm.expect(jsonData.paymentCurrency).to.eql('EUR');\r",
							"})\r",
							"\r",
							"console.log(jsonData.apiVersion)\r",
							"\r",
							"console.log(jsonData.title)\r",
							"\r",
							"console.log(jsonData.paymentCurrency)\r",
							"\r",
							"console.log(jsonData.categories)\r",
							"\r",
							"pm.test('to confirm the api version is correct', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiVersion).to.eql('7.2.3.0');\r",
							"})\r",
							"\r",
							"pm.test('confirm there is a backend category', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.categories).to.include('backend');\r",
							"})\r",
							"\r",
							"pm.test('confirm the developer link', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apps.developer).to.eql('https://demo.fusio-project.org/apps/developer');\r",
							"    console.log(jsonData.links[7]);\r",
							"})\r",
							"\r",
							"console.log(jsonData.links[7].href)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseUrl}}",
					"host": [
						"{{BaseUrl}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "bookID",
			"value": ""
		},
		{
			"key": "refID",
			"value": ""
		}
	]
}